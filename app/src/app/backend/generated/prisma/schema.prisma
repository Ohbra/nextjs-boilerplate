generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model course_of_study {
  course_name                                      String    @id(map: "course_pk") @db.VarChar(50)
  faculty_name                                     String    @db.VarChar(50)
  faculty                                          faculty   @relation(fields: [faculty_name], references: [faculty_name], onDelete: NoAction, onUpdate: NoAction, map: "course_fk1")
  student_student_course_of_studyTocourse_of_study student[] @relation("student_course_of_studyTocourse_of_study")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model faculty {
  faculty_name    String            @id(map: "faculty_pk") @db.VarChar(50)
  course_of_study course_of_study[]
  user_parent     user_parent[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model student {
  student_id                                               Int             @id(map: "student_pk1")
  course_of_study                                          String          @db.VarChar(50)
  user_parent                                              user_parent     @relation(fields: [student_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "student_fk1")
  course_of_study_student_course_of_studyTocourse_of_study course_of_study @relation("student_course_of_studyTocourse_of_study", fields: [course_of_study], references: [course_name], onDelete: NoAction, onUpdate: NoAction, map: "student_fk2")
  student_tag                                              student_tag[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model student_tag {
  tag_name   String  @db.VarChar(50)
  student_id Int
  tag        tag     @relation(fields: [tag_name], references: [tag_name], onDelete: NoAction, onUpdate: NoAction, map: "student_tag_fk1")
  student    student @relation(fields: [student_id], references: [student_id], onDelete: NoAction, onUpdate: NoAction, map: "student_tag_kf2")

  @@id([tag_name, student_id], map: "student_tag_pks")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model supervisor {
  supervisor_id   Int               @id(map: "supervisor_pk")
  vita            String?
  way_of_working  String?
  profile_tha     String?           @db.VarChar(2048)
  user_parent     user_parent       @relation(fields: [supervisor_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "supervisor_fk1")
  thesis_proposal thesis_proposal[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model tag {
  tag_name            String                @id(map: "tag_pk") @db.VarChar(50)
  student_tag         student_tag[]
  thesis_proposal_tag thesis_proposal_tag[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model thesis_proposal {
  thesis_id           Int                   @id(map: "topic_pk") @default(autoincrement())
  title               String
  description         String
  supervisor_id       Int
  requirements        String?
  thesis_type         String                @db.VarChar(20)
  application_start   DateTime?             @db.Date
  application_end     DateTime?             @db.Date
  thesis_start        DateTime?             @db.Date
  thesis_end          DateTime?             @db.Date
  supervisor          supervisor            @relation(fields: [supervisor_id], references: [supervisor_id], onDelete: NoAction, onUpdate: NoAction, map: "topic_fk1")
  thesis_proposal_tag thesis_proposal_tag[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model thesis_proposal_tag {
  tag_name        String          @db.VarChar(50)
  thesis_id       Int
  tag             tag             @relation(fields: [tag_name], references: [tag_name], onDelete: NoAction, onUpdate: NoAction, map: "topic_tag_fk1")
  thesis_proposal thesis_proposal @relation(fields: [thesis_id], references: [thesis_id], onDelete: NoAction, onUpdate: NoAction, map: "topic_tag_kf2")

  @@id([tag_name, thesis_id], map: "topic_tag_pks")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_parent {
  user_id       Int         @id(map: "user_pk") @default(autoincrement())
  name          String      @db.VarChar(50)
  surname       String      @db.VarChar(50)
  role          String      @db.VarChar(15)
  uni_email     String      @db.VarChar(50)
  photo         Bytes?
  faculty_name  String      @db.VarChar(50)
  password_hash String      @db.VarChar(50)
  birthdate     DateTime?   @db.Date
  gender        String?     @db.VarChar(1)
  timespent     BigInt
  reg_date      DateTime    @db.Date
  student       student?
  supervisor    supervisor?
  faculty       faculty     @relation(fields: [faculty_name], references: [faculty_name], onDelete: NoAction, onUpdate: NoAction, map: "user_fk1")
}
